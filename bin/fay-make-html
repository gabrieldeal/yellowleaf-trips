#!/usr/bin/perl
#-*-perl-*-

use strict;
use lib './lib';

use Carp ();
use Cwd ();
use File::chdir;
use Data::Dumper ();
use File::Basename ();
use IO::File ();
use File::Path ();
use Getopt::Long ();

local $Data::Dumper::Maxdepth = 5;
local $Data::Dumper::Sortkeys = 1;
local $^W = 1;
local $| = 1;
local $SIG{__WARN__} = sub { Carp::confess "DIEING on warning: @_" };
local $SIG{__DIE__}  = sub { Carp::confess "DIEING: @_" };

my @g_options = qw(
    directory=s
    verbose
    help
);
my %g_options = (
    verbose => 1,
);

exit(main());

######################################################################

sub usage {
    my ($prog) = ($0 =~ /([^\/]+)$/);
    sprintf("Usage: $prog [ OPTIONS ]\nOptions:\n\t--"
	    . join("\n\t--", @g_options)
            . <<EOT);
EOT
}

sub get_options {
    local $SIG{__WARN__};
    if (! Getopt::Long::GetOptions(\%g_options, @g_options)
	|| $g_options{'help'})
    {
	print usage();
        exit 1;
    }

    if (exists $g_options{'timezone'}) {
	$ENV{'TZ'} = $g_options{'timezone'};
    }

    foreach my $required (qw(directory)) {
	die "Missing --$required" unless exists $g_options{$required};
    }
}

sub main {
    srand($$ ^ time());
    get_options();

    make_pages();
}

sub make_pages {
    my $reports = require "bin/fay-files2.pl";

    my $index;
    foreach my $report (reverse @$reports) {
	local $CWD = "$g_options{directory}/$report->{subdir}";

	my $html = make_html($report);
	write_file("index.html", $html);

	my $title = $report->{title} ? (split(/\n/, $report->{title}))[0] : 'UNKNOWN';
	$index .= qq(<li>$report->{year}/$report->{month}/$report->{day} <a href="$report->{subdir}/index.html">$title</a></li>);
    }

    write_file("$g_options{directory}/index.html", <<EOT);
<html>
<body>
<ul>$index</ul>
</body>
</html>
EOT
}

sub write_file {
    my ($file, $html) = @_;

    my $fh = IO::File->new($file, 'w') or die $!;
    $fh->print($html) or die $!;
    $fh->close() or die $!;
}

sub make_html {
    my ($report) = @_;

    if (! $report->{title}) {
	print "Missing title: " . Data::Dumper::Dumper($report) ;
	$report->{title} = "UNKNOWN";
    }

    my @maps = map { qq(<a href="$_"><img class="map" height="225" width="300" src="$_"></a>) } @{ $report->{maps} };

    my @images;
    foreach my $image_set (@{ $report->{images} }) {
	push @images, join(" ", map { qq(<a href="$_"><img class="picture" height="225" width="300" src="$_"></a>) } @$image_set);
    }

    my $text = $report->{tr} || '';
    $text =~ s,\s*\n\s*\n\s*,\n<br><br>\n,gs;


    my $images_html = join("<br><h3>On Another Day</h3>", @images);

    return <<EOT;
<html>
<body>
<style>
.map {
    float: left;
    margin: 10px;
}
.picture {
    margin: 10px;
}
</style>
<h1>$report->{title}</h1>
@maps
$text
<br clear="left">
$images_html
</body>
</html>
EOT
}

1;
