#!/usr/bin/perl
#-*-perl-*-

use strict;
use lib './lib';

use Carp ();
use Cwd ();
use File::chdir;
use Data::Dumper ();
use File::Basename ();
use IO::File ();
use File::Path ();
use Getopt::Long ();

local $Data::Dumper::Maxdepth = 5;
local $Data::Dumper::Sortkeys = 1;
local $^W = 1;
local $| = 1;
local $SIG{__WARN__} = sub { Carp::confess "DIEING on warning: @_" };
local $SIG{__DIE__}  = sub { Carp::confess "DIEING: @_" };

my @g_options = qw(
    input-directory=s
    verbose
    help
);
my %g_options = (
    verbose => 1,
    "antiword-app" => "/cygdrive/c/Users/Gabriel/home/antiword-0_37-windows/antiword/antiword.exe",
    "extractallimages-app" => "/usr/local/bin/extractallimages.pl",
);

exit(main());

######################################################################

sub usage {
    my ($prog) = ($0 =~ /([^\/]+)$/);
    sprintf("Usage: $prog [ OPTIONS ]\nOptions:\n\t--"
	    . join("\n\t--", @g_options)
            . <<EOT);
EOT
}

sub get_options {
    local $SIG{__WARN__};
    if (! Getopt::Long::GetOptions(\%g_options, @g_options)
	|| $g_options{'help'})
    {
	print usage();
        exit 1;
    }

    if (exists $g_options{'timezone'}) {
	$ENV{'TZ'} = $g_options{'timezone'};
    }

    foreach my $required (qw(input-directory)) {
	die "Missing --$required" unless exists $g_options{$required};
    }
}

sub main {
    srand($$ ^ time());
    get_options();

    my $reports = require "bin/fay-files.pl";

    update_dates($reports);

    print Data::Dumper::Dumper($reports);
}

sub update_dates {
    my ($reports) = @_;

    foreach my $name (sort keys %$reports) {
	my $report = $reports->{$name};
	my $file_date = $report->{date};

	my $timestamp = $report->{date} or die Data::Dumper::Dumper($report);
	my ($timestamp_year, $timestamp_month, $timestamp_day) = ($timestamp =~ /^(\d\d\d\d)-(\d\d)-(\d\d)$/);
	my ($title_year, $title_month, $title_day) = get_date_from_title($report->{destination});

	my ($yyyy, $mm, $dd) = ($timestamp_year, $timestamp_month, $timestamp_day);
	if (defined $title_day || defined $title_year || defined $title_month) {
	    $yyyy = defined $title_year ? year_to_yyyy($title_year) : $timestamp_year;
	    $mm = defined $title_month ? month_to_mm($title_month) : $timestamp_month;
	    $dd = defined $title_day ? $title_day : $timestamp_day;
	}

	delete $report->{subdir};
	delete $report->{date};
	$report->{timestamp} = $timestamp;
	$report->{year} = $yyyy;
	$report->{month} = sprintf("%02d", $mm);
	$report->{day} = sprintf("%02d", $dd);
    }
}

sub year_to_yyyy {
    my ($year) = @_;

    if ($year < 20) {
	$year += 2000 
    } elsif ($year >= 80 && $year < 100)  {
	$year += 1900;
    } elsif ($year < 2000) {
	die "Bad year '$year'";
    }

    return $year;
}

sub month_to_mm {
    my ($month) = @_;

    if ($month =~ /^jan/i) {
	return 1;
    } elsif ($month =~ /^feb/i) {
	return 2;
    } elsif ($month =~ /^mar/i) {
	return 3;
    } elsif ($month =~ /^apr/i) {
	return 4;
    } elsif ($month =~ /^may/i) {
	return 5;
    } elsif ($month =~ /^jun/i) {
	return 6;
    } elsif ($month =~ /^jul/i) {
	return 7;
    } elsif ($month =~ /^aug/i) {
	return 8;
    } elsif ($month =~ /^sep/i) {
	return 9;
    } elsif ($month =~ /^oct/i) {
	return 10;
    } elsif ($month =~ /^nov/i) {
	return 11;
    } elsif ($month =~ /^dec/i) {
	return 12;
    } elsif ($month =~ /^\d\d?$/) {
	return $month;
    } else {
	die "Bad month '$month'";
    }
}

sub get_date_from_title {
    my ($title) = @_;

    return () unless defined $title;

    $title =~ s/[\sÂ \.]*$//mg;

    my ($year, $month, $day);

    # 12/31-01/01
    ($month, $day) = ($title =~ m,\s+(\d+)/(\d+)\s*-\s*\d+/\d+$,);
    if (defined $day) {
	return (undef, $month, $day);
    }

    # 01/31/09
    ($month, $day, $year) = ($title =~ m,\b(\d+)/(\d+)/(\d\d)$,);
    if (defined $year) {
	return ($year, $month, $day);
    }

    # 01/31
    ($month, $day) = ($title =~ m,\s+(\d+)/(\d+)$,);
    if (defined $day) {
	return (undef, $month, $day);
    }

    # 12/30-31, 2000
    ($month, $day, $year) = ($title =~ m{\b(\d+)/(\d+)-\d+,\s+(\d+)$});
    if (defined $day) {
	return ($year, $month, $day);
    }

    # October 20-21, 2012
    # Oct 20, 2012
    my $months_re = 'jan|january|feb|february|mar|march|apr|april|may|jun|june|jul|july|aug|august|sep|sept|september|oct|october|nov|november|dec|december';
    ($month, $day, $year) = ($title =~ m/\b($months_re)\s*(\d+)(?:\s*-\s*\d+)?,\s+(\d+)/im);
    if (defined $year) {
	return ($year, $month, $day);
    }

    # April 21
    ($month, $day) = ($title =~ m/\b($months_re)\s*(\d{1,2})(?:\s*-\s*\d+)/im);
    if (defined $day) {
	return (undef, $month, $day);
    }

    # November 2010
    ($month, $year) = ($title =~ m/($months_re)\s+(\d\d\d\d)$/i);
    if (defined $year) {
	return ($year, $month, undef);
    }
    

    return ();
}


1;
